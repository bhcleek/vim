*vimhelplint.txt*	A lint tool for vim help files.
						Last change:13-Mar-2017.

Author  : machakann <mckn{at}outlook.jp>
License : NYSL license
          Japanese <http://www.kmonos.net/nysl/>
          English (Unofficial) <http://www.kmonos.net/nysl/index.en.html>

Requirement:	Vim 7.4 or higher

==============================================================================
INDEX					*vimhelplint-index*

USAGE					|vimhelplint-usage|
ERROR LIST				|vimhelplint-error-list|
COMMANDS				|vimhelplint-commands|
FUNCTIONS				|vimhelplint-functions|
COOPERATION WITH OTHER PLUGINS		|vimhelplint-cooperation|

==============================================================================
USAGE					*vimhelplint-usage*

*vimhelplint* is a filetype plugin for vim help files to carry out static
syntax check.

This plugin defines a command |:VimhelpLint|, the command checks
the help file that user is editing (and the files in the same folder with it)
are checked.
>
	:VimhelpLint
<
It emits the result to |quickfix|, thus use |:copen|, |:cnext| and
so on to find errors. If user add bang (!) to the command, it opens
|quickfix-window| automatically.
>
	:VimhelpLint!
<

If the editing file is not so big, it might be convenient to run syntax check
automatically when user |:write| the file.
>
	autocmd BufWritePost */doc/*.txt :silent VimhelpLint!
<
However please remember that |:VimhelpLint| command sometimes gets heavy.

==============================================================================
ERROR LIST				*vimhelplint-error-list*

The list of error items might be updated in the future.

No.	Type		Note~
------------------------------------------------------------------------------
   1	Warning		The line is too long. According to the recommended
			style, it should be no longer than 78. |help-writing|
			The breakings "\n" at 79th column is allowed.

   2	Error		The tag is duplicate with another in the same file.

   3	Error		The tag is duplicate with another in a external help.

   4	Error		An orphan link. No corresponding tag has found.

   5	Warning		The link probably works, but it is not an exact form.
			A scope prefix may be dropped.

   6	Warning		The link probably works, but it is not an exact form.
------------------------------------------------------------------------------

The obsolete errors and warnings are listed below.

No.	Type		Note~
------------------------------------------------------------------------------
   7	Error		"The link of an option name is not jumpable. Need a
			space before the former quote."
			This problem has been solved by patch-7.4.1568.
------------------------------------------------------------------------------

==============================================================================
COMMANDS				*vimhelplint-commands*

:VimhelpLint				*:VimhelpLint*
	Runs syntax check and add errors to |quickfix| list. If user executes
	this command with '!' modifier |:command-bang|, it opens
	|quickfix-window| with errors or closes the window without errors.

:VimhelpLintEcho			*:VimhelpLintEcho*
	Runs syntax check and echo results. The messages are formatted as
	resolved by the following 'errorformat' patterns.
>
	set efm=%f:%l:%c:%trror:%n:%m,%f:%l:%c:%tarning:%n:%m
<
==============================================================================
FUNCTIONS				*vimhelplint-functions*

VimhelpLintGetQflist()			*VimhelpLintGetQflist()*
	Returns a list of errors in the editing help files. The returned list
	could be an argument of |setqflist()|.

==============================================================================
COOPERATION WITH OTHER PLUGINS		*vimhelplint-cooperation*

|vimhelplint| could cooperate with the listed plugins.

vim-hier~
vim-hier (https://github.com/jceb/vim-hier) is a plugin to highlight lines
registered in |quickfix|. This plugin makes easier to find erroneous lines. If
vim-hier is available, |vimhelplint| use it automatically without any setting.


The following plugins can run syntax check automatically. Note that running
vimhelplint is slow in general, so you better use one with async support, and
you should be careful about enabling it by default / invoking it too often.

vim-watchdogs~
|watchdogs.vim| (https://github.com/osyo-manga/vim-watchdogs) is a plugin for
asynchronous syntax checking. Install the |watchdogs.vim| and the requirements
(see the web page) and add |vimhelplint| as a syntax checker in vimrc.
>
	let g:quickrun_config['help/watchdogs_checker'] = {
	  \   'type': 'watchdogs_checker/vimhelplint',
	  \ }
<

syntastic~
|Syntastic| (https://github.com/scrooloose/syntastic) is a plugin to do syntax
check automatically. Install it and write a line to vimrc.
>
	let g:syntastic_help_checkers = ['vimhelplint']
<

Neomake~
Neomake (https://github.com/neomake/neomake) is a framework for Neovim/Vim to
run lint tools asynchronously. Install it and run the following in the root
directory of the plugin to install vimhelplint:
>
	make build/vimhelplint
<
Then you can run vimhelplint asynchronously and more (see |Neomake|):
>
	:Neomake vimhelplint
<
==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:
