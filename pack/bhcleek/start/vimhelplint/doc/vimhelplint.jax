*vimhelplint.jax*	Vim ヘルプファイル用の静的構文チェック
						Last change:06-Dec-2019.

書いた人   : machakann <mckn{at}outlook.jp>
ライセンス : NYSL ライセンス
          日本語版 <http://www.kmonos.net/nysl/>
          英語版 (非公式) <http://www.kmonos.net/nysl/index.en.html>

必要要件:	Vim 7.4 かそれ以降の Vim エディタであること

==============================================================================
INDEX					*vimhelplint-index*

USAGE					|vimhelplint-usage|
COMMANDS				|vimhelplint-commands|
FUNCTIONS				|vimhelplint-functions|
COOPERATION WITH OTHER PLUGINS		|vimhelplint-cooperation|

==============================================================================
USAGE					*vimhelplint-usage*

*vimhelplint* は静的構文チェックを行うためのVimヘルプファイル用ファイルタイプ
プラグインです。

このプラグインはコマンド |:VimhelpLint| を定義します。このコマンドは編集中のフ
ァイル、およびそのファイルと同じフォルダに存在するヘルプファイルをチェックしま
す。
>
	:VimhelpLint
<
結果は |quickfix| へ送られます。結果を確認のために |:copen|, |:cnext| などのコ
マンドをご使用ください。 |:VimhelpLint| コマンドに!修飾子をつけると
|quickfix-window| を自動的に開きます。
>
	:VimhelpLint!
<

もし編集中のファイルがあまり大きくなければ自動的にチェックを走らせるのも便利か
もしれません。
>
	autocmd BufWritePost */doc/*.txt :silent VimhelpLint!
<
ただし、残念ながら |:VimhelpLint| コマンドはしばしば時間がかかってしまうことが
あることを留意しておいてください。

==============================================================================
ERROR LIST				*vimhelplint-error-list*

このリストは将来更新される可能性があります。

番号	種類		説明~
------------------------------------------------------------------------------
   1	警告		一行が長すぎます。推奨される一行の長さは78桁です。
			|help-writing| ただし、79桁目の改行文字は許されます。

   2	エラー		同じファイルの中でタグが重複しています。

   3	エラー		別のファイルのタグと重複しています。

   4	エラー		有効でないリンクです。対応するタグが見つかりません。

   5	警告		おそらくリンクとしては有効に働きますが、正確な記述では
			ありません。スコーププレフィックス (g:, t:, w:, b:) の
			書き忘れと思われます。

   6	警告		おそらくリンクとしては有効に働きますが、正確な記述では
			ありません。

   8	警告		Vim のオプションにリンク表記を使うべきではありません。
------------------------------------------------------------------------------

以下は既に廃止されたエラーおよび警告のリストです。

No.	Type		Note~
------------------------------------------------------------------------------
   7	Error		『当該オプション名はタグジャンプできません。クオーテー
			ションの前にスペースを挿入してください。』
			この問題は patch-7.4.1568 によって既に解決しました。
------------------------------------------------------------------------------

==============================================================================
COMMANDS				*vimhelplint-commands*

:VimhelpLint				*:VimhelpLint*
	構文チェックを実行し、エラーを |quickfix| リストへ送ります。
	! 修飾子 |:command-bang| 付きで実行された場合は、エラーがあれば
	|quickfix-window| を開き、なければこれを閉じます。

:VimhelpLintEcho			*:VimhelpLintEcho*
	構文チェックを実行し、結果を表示します。このメッセージは次の
	'errorformat' パターンによって解釈できる形式で出力されます。
>
	set efm=%f:%l:%c:%trror:%n:%m,%f:%l:%c:%tarning:%n:%m
<
==============================================================================
FUNCTIONS				*vimhelplint-functions*

VimhelpLintGetQflist()			*VimhelpLintGetQflist()*
	編集中のヘルプファイルのエラーをリストにして返します。返り値は
	|setqflist()| の引数とすることのできる形式です。

==============================================================================
COOPERATION WITH OTHER PLUGINS		*vimhelplint-cooperation*

|vimhelplint| は下記のプラグインと連動します。

vim-hier~
vim-hier (https://github.com/jceb/vim-hier) は |quickfix| のエラー箇所をハイラ
イトするためのプラグインです。エラー箇所を見易くしてくれます。 vim-hier が利用
可能な場合 |vimhelplint| は自動的にこれと連動します。特別な設定は必要ありませ
ん。


以下のプラグインは構文チェックを自動的に行うためのプラグインです。これらは便利
ですが |:VimhelpLint| はしばしば時間がかかってしまう点を忘れないでください。

vim-watchdogs~
|watchdogs.vim| (https://github.com/osyo-manga/vim-watchdogs) は非同期に構文
チェックを行うためのプラグインです。使うためにはまず |watchdogs.vim| と必要な
もの (上のURLを確認してください) をインストールし、次の設定を vimrc に追加して
ください。
>
	let g:quickrun_config['help/watchdogs_checker'] = {
	  \   'type': 'watchdogs_checker/vimhelplint',
	  \ }
<

syntastic~
|syntastic| (https://github.com/scrooloose/syntastic) は自動的に構文チェックを
行うためのプラグインです。 |syntastic| をインストールし、次の設定を vimrc に追
加してください。
>
	let g:syntastic_help_checkers = ['vimhelplint']
<

Neomake~
Neomake (https://github.com/neomake/neomake) は Neovim/Vim の両方に対応した構
文チェックを非同期に行うためのフレームワークです。インストールの後、 Neomake
のルートディレクトリで以下を実行すると vimhelplint を自動でダウンロードしま
す。
>
	make build/vimhelplint
<
あとは次のコマンドで構文チェックを実行できます。詳しくは |Neomake.txt| を参照
してください。
>
	:Neomake vimhelplint
<
==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:
